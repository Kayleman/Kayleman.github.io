{"meta":{"title":"Kayle's Blog","subtitle":"Never forget to say \"thanks\".","description":"Record my learning process and share it.","author":"Kayle Zhuang","url":"http://kayleman.github.io"},"pages":[{"title":"","date":"2017-06-24T08:24:40.000Z","updated":"2017-06-24T08:24:40.000Z","comments":true,"path":"404.html","permalink":"http://kayleman.github.io/404.html","excerpt":"","text":""},{"title":"About","date":"2017-06-24T04:59:38.000Z","updated":"2017-06-24T04:59:38.000Z","comments":true,"path":"about/index.html","permalink":"http://kayleman.github.io/about/index.html","excerpt":"","text":"昔日寒山问拾得曰：世间有人谤我、欺我、辱我、笑我、轻我、贱我、恶我、骗我、如何处治乎？ 拾得曰：只要忍他、让他、由他、避他、耐他、敬他、不要理他，再待几年你且看他。"},{"title":"categories","date":"2017-06-23T12:41:01.000Z","updated":"2017-06-23T12:41:01.000Z","comments":true,"path":"categories/index.html","permalink":"http://kayleman.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-06-23T12:41:18.000Z","updated":"2017-06-23T12:41:18.000Z","comments":true,"path":"tags/index.html","permalink":"http://kayleman.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"如何将iPhone/iPad备份到外置硬盘中","slug":"如何将iPhone备份到外置硬盘中","date":"2017-07-20T10:05:18.000Z","updated":"2017-07-20T10:52:46.000Z","comments":true,"path":"2017/07/20/如何将iPhone备份到外置硬盘中/","link":"","permalink":"http://kayleman.github.io/2017/07/20/如何将iPhone备份到外置硬盘中/","excerpt":"前言因为偶然发现在Web上登录iCloud使用”查找我的iPhone”功能不需要进行二次验证, 可以直接登录, 并且能够锁定自己的设备, 甚至还能够直接抹除设备上的数据, 为了避免在密码泄露的时候被不怀好意的人抹除数据造成损失, 于是决定将iPhone的数据备份. 很多人可能都只是用iCloud进行数据的备份, 但是iCloud免费空间太小不说, 而且备份极其不稳定, 经常不能成功备份. 它所显示的备份成功, 其实有时候并没有真正地备份成功. 有次在恢复备份数据的时候才发现没有备份成功, 导致很多数据丢失. 所以, 我选择了稳定的iTunes进行备份. 但是有一个问题, iTunes默认情况下只能备份到内置磁盘, 而Mac的存储空间通常比较紧张, 所以就考虑把备份放到移动硬盘上. 我使用的是手动修改备份路径的方法.","text":"前言因为偶然发现在Web上登录iCloud使用”查找我的iPhone”功能不需要进行二次验证, 可以直接登录, 并且能够锁定自己的设备, 甚至还能够直接抹除设备上的数据, 为了避免在密码泄露的时候被不怀好意的人抹除数据造成损失, 于是决定将iPhone的数据备份. 很多人可能都只是用iCloud进行数据的备份, 但是iCloud免费空间太小不说, 而且备份极其不稳定, 经常不能成功备份. 它所显示的备份成功, 其实有时候并没有真正地备份成功. 有次在恢复备份数据的时候才发现没有备份成功, 导致很多数据丢失. 所以, 我选择了稳定的iTunes进行备份. 但是有一个问题, iTunes默认情况下只能备份到内置磁盘, 而Mac的存储空间通常比较紧张, 所以就考虑把备份放到移动硬盘上. 我使用的是手动修改备份路径的方法. 迁移旧的备份文件 退出iTunes, 连接你的外置硬盘. 打开Finder, 按下 Command + Shift + G快捷键前往文件夹, 在弹出的窗口中输入以下路径(iTunes的默认备份路径):~/Library/Application Support/MobileSync/ 将整个Backup拷贝到外置硬盘中(我的外置硬盘名字叫MacBackup, 并且在里面新建了个文件夹, 名字叫做iPhoneBackup, 所以我是拷贝到这个iPhoneBackup文件夹中, 你可以根据自己的情况对应地修改下文中命令中的路径名称). 拷贝完之后, 需要将这个Backup文件夹重命名为其他名字, 或者直接把这个文件夹给删除. 因为如果不这样做, 后面在进行软连接的时候, 会出现文件夹已存在的错误.如下图: 创建符号链接为了让iTunes能够备份到外置硬盘, 关键是在原备份文件夹和外置文件夹之间建立符号链接(Symbolic Link, 也称软链接, 类似于Windows的快捷方式和OSX中的替身文件). 从而使得我们能够欺骗iTunes, 让它误以为是备份在了内置硬盘上. 打开Finder, 选中外置硬盘中的iPhoneBackup文件夹. 打开终端, 将iPhoneBackup文件夹拖入终端, 得到一个路径:/Volumes/MacBackup/iPhoneBackup 复制这个路径, 和iTunes的默认备份路径一起, 组合成下面的命令(不要落掉斜杠和空格,建议直接复制):ln -s /Volumes/MacBackup/iPhoneBackup/Backup ~/Library/Application\\ Support/MobileSync/ 重启终端, 执行第3步中的命令. 完成后, 查看iTunes默认备份文件夹, 发现一个带着小箭头的Backup文件夹, 表明软链接建立完成. 备份打开iTunes, 选择备份到本电脑, 立即备份即可自动备份到外置硬盘.","categories":[{"name":"备忘","slug":"备忘","permalink":"http://kayleman.github.io/categories/备忘/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://kayleman.github.io/tags/教程/"}]},{"title":"利用Github Pages + Hexo搭建自己的博客","slug":"利用Github Pages + Hexo搭建自己的博客","date":"2017-06-29T08:28:38.000Z","updated":"2017-06-29T08:58:37.000Z","comments":true,"path":"2017/06/29/利用Github Pages + Hexo搭建自己的博客/","link":"","permalink":"http://kayleman.github.io/2017/06/29/利用Github Pages + Hexo搭建自己的博客/","excerpt":"前言一直想要搭建一个自己的博客，用来记录自己的学习到的一些东西，方便以后忘记了来翻看。那么就用本文记录一下在搭建博客过程中遇到的一些坑。 首先要说明本文是在Mac环境下搭建的，Windows环境下面没有尝试，但是根据Wiyee同学说的都是大同小异罢了。 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。","text":"前言一直想要搭建一个自己的博客，用来记录自己的学习到的一些东西，方便以后忘记了来翻看。那么就用本文记录一下在搭建博客过程中遇到的一些坑。 首先要说明本文是在Mac环境下搭建的，Windows环境下面没有尝试，但是根据Wiyee同学说的都是大同小异罢了。 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 1.Github PagesGithub Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被免费托管在Github 上，你可以选择使用Github Pages 默认提供的域名github.io 或者自定义域名来发布站点。 创建Github Pages的前提是你有一个Github帐号就行了，然后利用这个帐号创建一个仓库，但是这个仓库是有规则的，其格式必须为：yourusername.github.io。其中yourusername是你的Github用户名，比如说我的用户名是kayleman，所以我的仓库格式是kayleman.github.io。 没有Github的朋友可以点击这里进行注册。 登陆Github后可以在右边栏点击New repository创建一个新的仓库。如下图： 在Repository name的位置输入你的仓库名，如下图： 这里是因为我拿自己的仓库名做示范，而仓库名是必须要唯一的，所以才会提示仓库名已存在，接下来点击Create repository就行了。 2.环境准备和搭建安装Hexo的过程很简单，但是在安装前必须要确定你的电脑是否有以下程序： Node.js Git 如果没有的话就需要依次进行安装。 Git具体的配置可以上网搜一下，这里不再赘述。 安装Node.js到Node.js官网去下载相应平台的最新版本安装即可 安装Git使用 Homebrew，在终端输入brew install git进行安装 安装Hexo在终端输入npm install -g hexo-cli 更详细的可以见Hexo的官方文档。 建站Hexo安装好了之后，就可以开始建站了，通过终端cd到将要建站的位置，输入以下命令： 123hexo init yournamecd yournamenpm install 其中yourname可以任意取，比如我的叫Hexo， 关于建站的更多信息你可以参考官方文档，点击这里。 官方文档没有讲解如何配置与Github Pages进行关联，在此简单说明一下。进入到你的站点，也就是yourname文件夹，下文统一使用我自己的文件夹名Hexo方便描述。进入到文件夹以后你可以看到_config.yml这个文件，这是一个配置文件，是用来配置信息的。用编辑器打开_config.yml拉到最下面，你可以看到有deply和type字段，可以参考我的例子如下输入： 1234deploy: type: git repo: https://github.com/Kayleman/Kayleman.github.io.git branch: master 其中repo：后面的就改成你的Github Pages提交代码的git地址。 你的git地址在你刚才创建好的Github Pages仓库就能找到。 到此为止，你可以进入你的站点文件夹，使用hexo s命令，如果你看到Hexo is running at http://localhost:4000/. Press Ctrl+C to stop这么一句话，那么请打开你的浏览器输入http://localhost:4000/你就可以看到最初始的hexo界面了，是不是有点丑？不要紧，后期我们还可以修改页面的主题来更换样式。 发布刚才那样只是能够在本地显示，还没有上传到Github Pages服务器上面，所以我们需要在站点里输入以下命令： 123hexo cleanhexo ghexo d 其中第一条命令是清楚缓存，第二条命令全名是hexo generate，是用来生成静态文件的，第三条命令全名是hexo deploy，这条命令是用来把本地的文件发布到Github Pages上的。一般平时就使用这几个命令，更多命令可以参考官方文档 在我刚开始使用hexo d部署的时候出现了not found的问题，如果遇到了这个问题，请先输入： 1npm install hexo-deployer-git --save 然后再运行hexo d进行尝试。 为了方便hexo g和hexo d可以组合起来写，如下： 1hexo d -g 写文章写文章可以使用命令界面输入命令来完成，但是我觉得有点繁琐也不利于排版，于是就没用使用这种方法。由于最终上传的是.md文件，是markdown文件，关于markdown的一些简单语法你可以上网查阅一下，还是挺简单的。(我本人在Windows系统下使用MarkdownPad 2来编辑md文件，在Mac系统下是用MacDown，都挺好用) 在我们写好文章之后，可以直接把.md文件放到Hexo/source/_post目录下，再发布到Github Pages上你就可以看到文章了，稍微有那么一会的延迟，如果你没有绑定域名的话，在浏览器输入你的仓库地址，比如我的是kayleman.github.io就可以看到你的博客页面了。 还有一点就是在编辑文章的时候，可以在适当位置添加以下代码： 1&lt;!-- more --&gt; more以上是文章的摘要，在主页显示，more以下需要点击read more链接才能打开全文显示，可以有效避免博客主页被过多地占用。例如我的博客效果如下： Hexo主题的更换前面已经看到了，初始化的页面是非常丑的，我们可以更换Hexo的主题，在知乎上有这个话题，可以点击这里去参考一下。找到喜欢的主题后安装主题就是一条命令，比如我使用的是icarus主题 1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 从git上clone下来放到Hexo/theme路径下。然后打开Hexo/_config.yml文件，修改里面theme的参数为icarus。 之后再根据主题作者Github上提供的方法一步步配置icarus文件夹里面的_config.yml文件。 至于具体的主题配置和一些模块的设置我会再详细地写一篇博客，这里不再赘述。 域名绑定要绑定域名，首先你要去注册一个域名，我是在万网注册的，你可以点击这里进行注册，或者去其它的域名注册商那注册。对于域名的具体购买等步骤这里也不再赘述。 这里需要提一下的就是注册的域名如何与Github Pages进行绑定。首先在本地站点也就是Hexo目录下的source下面添加一个CNAME文件，不带后缀，效果如下： 用文本编辑器打开，里面添加你的域名信息，不加http://，如下图： 在万网的域名控制中心，点击解析，然后添加解析，详细的方法可以见域名注册商的网站，万网的方法点击这里。 参考https://hexo.io/zh-cn/docs/index.html http://ibruce.info/2013/11/22/hexo-your-blog/ http://www.jianshu.com/p/834d7cc0668d","categories":[{"name":"备忘","slug":"备忘","permalink":"http://kayleman.github.io/categories/备忘/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://kayleman.github.io/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://kayleman.github.io/tags/博客/"}]},{"title":"Win7遇到的小问题备忘","slug":"win7自己遇到的小问题总结","date":"2017-06-23T05:25:21.000Z","updated":"2017-06-29T08:51:52.000Z","comments":true,"path":"2017/06/23/win7自己遇到的小问题总结/","link":"","permalink":"http://kayleman.github.io/2017/06/23/win7自己遇到的小问题总结/","excerpt":"前言本文记录了我自己在使用win7过程中遇到的一些小问题,整理起来备忘.","text":"前言本文记录了我自己在使用win7过程中遇到的一些小问题,整理起来备忘. 1.开机自动默认打开numlock键，想要关闭。 在开始菜单搜索栏输入 regedit ，打开注册表定位到下面键值HKEY_USERS\\.DEFAULT\\Control Panel\\Keyboard 修改InitialKeyboardIndicators的键值 设置为“2”，小键盘默认为开； 设置为“1”，小键盘默认为关闭； 设置为“0”，则系统关机前Unm Lock是什么状态，开机后还是什么状态。 2.win7系统开机，还没输密码直接显示用户密码错误。 在开始菜单搜索框输入 “netplwiz” 按回车，打开高级用户控制面板； 在高级用户控制面板中，“要使用本机，用户需输入用户名和密码(E)”项的勾选打勾. 3.开机界面什么都没有 Ctrl + Shift + Esc调出任务管理器,直接把explorer进程给关闭 在任务管理器左上角选择”文件” –&gt; “新建任务” 输入explorer以管理员身份运行。 4.怎么上Google 用GoGoTester找可用的Google IP 在cmd界面ping一下IP是否可用，确认可用 到C:\\Windows\\System32\\drivers\\etc修改hosts 最好刷新一下dns，即在cmd界面输入ipconfig/flushdns 或者直接去www.laod.cn这个网站上去找hosts文件,下载下来,同样按照第3步替换hosts文件 5.怎么不让Google跳转到hk或者其它地区第一次直接在浏览器打www.google.com的时候经常会出现无法连接的情况 可以直接输入https://www.google.com 然后有可能会被跳转到.hk的香港的服务器去,由于香港的服务器也是被屏蔽了很多信息的 如果不想跳转可以一次性直接输入https://www.google.com/ncr 后面的/ncr代表禁止国别跳转 之后就不需要在次输入/ncr会默认不跳转 6.怎么在chrome搜索框默认用Google搜索而不跳转到hk 在Google界面随便搜索一个词比如说“asd” 把地址栏里的asd对应替换成%s，全部复制 到设置里添加搜索引擎 把这个新添加的设为默认搜索引擎 7.win7怎么设置定时关机 最简单的就用一些360，QQ管家，QQ音乐，WIFI共享精灵之类的 win7里面有自带的关机程序，在Windows\\System32\\Shutdown.exe，可以直接打开这个可执行应用程序 也可以选择“开始-&gt;运行-&gt;cmd”打开命令窗口，比如你的电脑要在22:00关机，输入“at 22:00 Shutdown -s” 到了22点电脑就会出现“系统关机”对话框，默认有30秒钟的倒计时并提示你保存工作。 如果你想以倒计时的方式关机，可以输入“Shutdown.exe -s -t 3600”，表示60分钟后自动关机，“3600”代表60分钟 设置好自动关机后，如果想取消的话，可以在运行中输入“shutdown -a”。 另外输入 “shutdown -i”，则可以打开设置自动关机对话框，对自动关机进行设置。 Shutdown.exe的参数，每个都具有特定的用途，执行每一个都会产生不同的效果，比如 -s：就表示关闭本地计算机 -a：表示取消关机操作 -f：强行关闭应用程序 -m 计算机名：控制远程计算机 -i：显示图形用户界面，但必须是Shutdown的第一个选项 -l：注销当前用户 -r：关机并重启 -t 时间：设置关机倒计时 -c “消息内容”：输入关机对话框中的消息内容 8.不格式化硬盘转换硬盘格式（FAT32转NTFS） 运行输入cmd进入命令界面 输入convert c: /fs:ntfs（其中C就是指C盘，转哪个写哪个盘名） 9.音量控制图标不见了怎么办将explorer.exe重启,具体怎么重启见前面第3条 10.图片只显示缩略图怎么办 打开我的电脑 点开工具，选择文件夹选项 点击查看，把始终显示图标勾选去掉。","categories":[{"name":"备忘","slug":"备忘","permalink":"http://kayleman.github.io/categories/备忘/"}],"tags":[{"name":"Windows7","slug":"Windows7","permalink":"http://kayleman.github.io/tags/Windows7/"}]},{"title":"Ubuntu16.04虚拟机设置固定IP的方法","slug":"Ubuntu16.04虚拟机设置固定IP上网","date":"2017-06-23T05:25:20.000Z","updated":"2017-06-29T08:48:48.000Z","comments":true,"path":"2017/06/23/Ubuntu16.04虚拟机设置固定IP上网/","link":"","permalink":"http://kayleman.github.io/2017/06/23/Ubuntu16.04虚拟机设置固定IP上网/","excerpt":"前言由于经常需要直接在主机通过IP连接到虚拟机,所以上网搜了一些Ubuntu设置固定IP上网的方法,其中遇到了一些问题,参考了大神的博客内容,之后会列出原文链接,如果侵犯了您的权利,请与我联系删除,谢谢. 设置固定IP的方法很多，大家都知道虚拟机上网有三种模式：bridged、host-only和NAT， 其中NAT模式对应VMnet8虚拟网络，host-only模式对应VMnet1虚拟网络，bridged模式对应 VMnet0虚拟网络，都是由VMware虚拟机自动配置而生成的，不需要用户自行设置。VMnet8和VMnet1提供DHCP服务，VMnet0虚拟 网络则不提供。 当前环境:虚拟机版本:VMware WorkStation 12系统版本:Ubuntu 16.04","text":"前言由于经常需要直接在主机通过IP连接到虚拟机,所以上网搜了一些Ubuntu设置固定IP上网的方法,其中遇到了一些问题,参考了大神的博客内容,之后会列出原文链接,如果侵犯了您的权利,请与我联系删除,谢谢. 设置固定IP的方法很多，大家都知道虚拟机上网有三种模式：bridged、host-only和NAT， 其中NAT模式对应VMnet8虚拟网络，host-only模式对应VMnet1虚拟网络，bridged模式对应 VMnet0虚拟网络，都是由VMware虚拟机自动配置而生成的，不需要用户自行设置。VMnet8和VMnet1提供DHCP服务，VMnet0虚拟 网络则不提供。 当前环境:虚拟机版本:VMware WorkStation 12系统版本:Ubuntu 16.04 1. 设置虚拟机上网方式为NAT在虚拟机设置中的网络适配器里,选择NAT模式 2. 配置VMnet8虚拟网络 在VMware的编辑选项中打开虚拟网络编辑器 按照下图中对虚拟网络进行设置,虚拟网络的列表里默认是有VMnet0,VMnet1和VMnet8三种,我只有一种是因为我把另外两种给移除了,在这里我们选择VMnet8网络,其中子网IP根据自己的情况进行设置,只要不把原来已有的给占用即可. 3. 进入到Ubuntu系统中配置网络主要配置下面三个方面的内容： 修改文件/etc/network/interfaces，这里是IP、网关、掩码等的一些配置； 修改文件/etc/resolv.conf，这个文件保存DNS的有关信息； 解决resolv.conf被重写问题； 重启虚拟机网络 (1).修改文件/etc/network/interfaces输入命令:1sudo vi /etc/network/interfaces 或者: 1sudo gedit /etc/network/interfaces 配置如下: 1234567891011#interfaces(5) file used by ifup(8) and ifdown(8)auto loiface lo inet loopbackauto ens33iface ens33 inet staticaddress 192.168.8.100netmask 255.255.255.0gateway 192.168.8.2dns-nameservers 8.8.8.8 其中较新版本的比如我的Ubuntu16.04 就是ens33,有的版本是eth0, 具体可以在终端输入ifconfig命令查看,如图: 另外其中的网关要和虚拟网络编辑器中设置的一致,一般好像为192.168.XXX.2 上面最后一行设置的DNS不是必要的,可在下一步设置,这一步的优先级比resolv.conf中高,会优先在这一步读取DNS,如果没有配置才会去resolve.conf里面查找. (2)修改文件/etc/resolv.conf输入命令: 1sudo vi /etc/resolv.conf 或 1sudo gedit /etc/resolv.conf 配置如下: 1nameserver 8.8.8.8 这里具体DNS因人而异 (3)解决resolv.conf被重写问题第二步中你虽然配置了DNS，但是每次重启虚拟机或重启网络后/etc/resolv.conf文件就会被重写，也就是又恢复原样了，你以前的配置就不存在了，每次都要手动配置是极不可取的，所以这步是必须的，首先我们要搞清楚resolv.conf被重写的原因和机制，这在不同 Ubuntu版本下有所差异。 在这一步,教程原文上有两种办法,第一种是根据不同系统版本来采取不同的办法,第二种是于版本无关,通用的做法.我选了第二种,如果想看第一种方法,可以在文末的原文链接里去看. 第二种办法就是在前面第(1)步中在最后面直接加上你的DNS地址,因为interfaces优先级比resolv.conf高,会优先看interfaces里面的DNS. (4)重启虚拟机网络配置完成后需要重启一下网络: 1sudo service networking restart 或者 1sudo /etc/init.d/networking restart 在这一步我重启网络失败了,只能选择了下面的重启网卡 12sudo ifconfig eth0 down sudo ifconfig eth0 up 赶紧试试是不是可以了 参考:原文链接","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://kayleman.github.io/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://kayleman.github.io/tags/Ubuntu/"},{"name":"虚拟机","slug":"虚拟机","permalink":"http://kayleman.github.io/tags/虚拟机/"}]},{"title":"Ubuntu虚拟机如何与主机共享科学上网","slug":"虚拟机里面的Ubuntu怎么和主机共享科学上网","date":"2017-06-23T05:25:17.000Z","updated":"2017-06-29T08:50:19.000Z","comments":true,"path":"2017/06/23/虚拟机里面的Ubuntu怎么和主机共享科学上网/","link":"","permalink":"http://kayleman.github.io/2017/06/23/虚拟机里面的Ubuntu怎么和主机共享科学上网/","excerpt":"前言主机已经科学上网了,希望虚拟机里面的Ubuntu也能够科学上网,要怎么做呢? 我用的科学上网软件是ShadowSocks,关于这个软件怎么科学上网网上有非常多的教程,这里就不够多介绍了","text":"前言主机已经科学上网了,希望虚拟机里面的Ubuntu也能够科学上网,要怎么做呢? 我用的科学上网软件是ShadowSocks,关于这个软件怎么科学上网网上有非常多的教程,这里就不够多介绍了 1.通过ShadowSocks科学上网通常这类软件里面都有允许来自局域网的连接之类的选项 勾选这个选项,然后查看一下代理端口是多少,一般默认是1080 2.查看主机的ip地址我主机是Windows系统,在命令窗口输入ipconfig,得到自己的主机ip 3.在Ubuntu下面填写代理在Ubuntu中打开Network,选择下面的Network proxy,选择Manual手动模式,将主机的IP和代理端口填入 完成!","categories":[{"name":"科学上网","slug":"科学上网","permalink":"http://kayleman.github.io/categories/科学上网/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://kayleman.github.io/tags/Ubuntu/"},{"name":"科学上网","slug":"科学上网","permalink":"http://kayleman.github.io/tags/科学上网/"}]},{"title":"Mac下Vim安装NERDTree插件的方法","slug":"Mac下Vim安装NERDTree插件","date":"2017-06-23T05:25:15.000Z","updated":"2017-06-29T08:49:30.000Z","comments":true,"path":"2017/06/23/Mac下Vim安装NERDTree插件/","link":"","permalink":"http://kayleman.github.io/2017/06/23/Mac下Vim安装NERDTree插件/","excerpt":"前言相信所有使用 vim 的同学都知道文件管理插件 NERDTree，这个几乎是所有拥护 vim 的开发人员都会使用的插件, 本文简单介绍了 NERDTree 的安装.","text":"前言相信所有使用 vim 的同学都知道文件管理插件 NERDTree，这个几乎是所有拥护 vim 的开发人员都会使用的插件, 本文简单介绍了 NERDTree 的安装. 1.安装pathogen.vim在Terminal输入以下命令,创建.vim文件夹和下面的autoload和bundle子文件夹,同时将pathogen.vim下载到autoload里面 12mkdir -p ~/.vim/autoload ~/.vim/bundle &amp;&amp; \\curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim 通过vim ~/.vimrc编辑vim配置文件,将 1execute pathogen#infect() 添加到vimrc中 2.安装NERDTree进入到bundle文件夹,并且把NERDTree下载在这个目录下12cd ~/.vim/bundlegit clone https://github.com/scrooloose/nerdtree.git 在Terminal下输入vim进入vim窗口,输入:NERDTree启动NERDTree,在确定NERDTree已经安装成功后,为了避免以后每次开启都需要输入:NERDTree较为麻烦,为它设置一个快捷键 定义快捷键,键入vim ~/.vimrc按i进入插入模式输入nnoremap &lt;silent&gt; &lt;F5&gt; :NERDTree&lt;CR&gt;按Esc键返回Normal状态并输入:wq保存退出。定义F5为显示树状目录的快捷键。 参考http://jingyan.baidu.com/article/59a015e3a33404f7948865d2.htmlhttp://blog.chinaunix.net/uid-20032401-id-5706833.htmlhttps://github.com/johnbellone/vim","categories":[{"name":"Vim","slug":"Vim","permalink":"http://kayleman.github.io/categories/Vim/"}],"tags":[{"name":"Vim","slug":"Vim","permalink":"http://kayleman.github.io/tags/Vim/"},{"name":"插件","slug":"插件","permalink":"http://kayleman.github.io/tags/插件/"}]}]}